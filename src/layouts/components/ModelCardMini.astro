---
import config from "@/config/config.json";
import {
  getLangFromUrl,
  slugSelector,
} from "@/lib/utils/languageParser";
import { humanize, plainify, slugify } from "@/lib/utils/textConverter";
import { formatNumber, formatTokens } from "@/lib/utils/formatUtils";
import { FaRegUserCircle } from "react-icons/fa";
import CopyIconButton from "@/helpers/CopyIconButton";

const { summary_length }: { summary_length: number; model_folder: string } =
  config.settings;
const { data } = Astro.props;
const {
  title,
  id,
  context,
  input,
  output,
  description,
  image,
  categories,
  date,
  author,
  img,
  request,
  is_active,
  discount,
  is_free,
} = data.data;

const lang = getLangFromUrl(Astro.url);

const slugParts = data.slug.split("/");
slugParts[0] = "models";
const modifiedSlug = slugParts.join("/");
data.slug = modifiedSlug;

---

<div class="relative h-full bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 hover:shadow-md transition-shadow duration-200">
  {(discount || is_free) && (
    <div class="badge-container absolute -top-2 -right-2 z-10 flex gap-1">
      {discount < 1 && (
        <span class="badge inline-flex items-center px-3 py-1 rounded-full text-sm font-bold bg-gradient-to-r from-red-500 to-pink-500 text-white shadow-lg transform hover:scale-105 transition-transform duration-200">
          {Math.round((1-discount) * 100)}% OFF
        </span>
      )}
      {is_free && (
        <span class="badge inline-flex items-center px-3 py-1 rounded-full text-sm font-bold bg-gradient-to-r from-green-400 to-emerald-500 text-white shadow-lg transform hover:scale-105 transition-transform duration-200">
          FREE
        </span>
      )}
    </div>
  )}
  
  <div class="p-4">
    <div class="mb-4">
      <h3 class="text-xl font-semibold text-gray-600 dark:text-gray-300 line-clamp-1">
        <a href={slugSelector(`/${data.slug}`, lang)} class="hover:text-primary">
          {title}
        </a>
      </h3>
    </div>

    {is_active && (
      <div class="flex items-start mb-4">
        <CopyIconButton client:load textToCopy={id}>
          <span class="mr-2 font-mono text-sm text-gray-400 dark:text-gray-400 border-b border-dashed border-gray-500/30 hover:border-gray-500/60 transition-colors duration-200">
          ID: {id}
          </span>
          </CopyIconButton>
        </div>
      )}

    <p class="text-sm text-gray-400 dark:text-gray-400 mb-6 line-clamp-2">
      {plainify(data.body?.slice(0, Number(summary_length)))}...
    </p>

    <div class="text-xs text-gray-400 dark:text-gray-400 flex flex-wrap gap-2 justify-between">
      <span class="flex items-center">
        <FaRegUserCircle className="mr-1" />
        {humanize(author)}
      </span>
      <span class="flex items-center">
        <span class="px-3">{formatNumber(context)}</span>
        <span class="border-l border-gray-200 px-3">${formatTokens(input * 1000000)}</span>
        <span class="border-l border-gray-200 px-3">${formatTokens(output * 1000000)}</span>
      </span>
    </div>
  </div>
</div>

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* 优化的标签样式和动画 */
  .badge-container {
    transform-origin: center;
    transition: transform 0.3s ease;
  }

  .badge {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
  }

  .badge:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
</style>
