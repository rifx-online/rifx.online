---
import config from "@/config/config.json";
import dateFormat from "@/lib/utils/dateFormat";
import {
  getLangFromUrl,
  getTranslations,
  slugSelector,
} from "@/lib/utils/languageParser";
import { humanize, plainify, slugify } from "@/lib/utils/textConverter";
import type { ContentEntryMap } from "astro:content";
import { FaRegFolder, FaRegUserCircle } from "react-icons/fa";
import ImageMod from "./ImageMod.astro";

const { summary_length }: { summary_length: number; model_folder: string } =
  config.settings;
const { data } = Astro.props;
const { title, id, context, input, output, description, image, categories, date, author } = data.data;

const lang = getLangFromUrl(Astro.url);
const { read_more } = await getTranslations(lang as keyof ContentEntryMap);

const slugParts = data.slug.split("/");
slugParts[0] = "models";
const modifiedSlug = slugParts.join("/");
data.slug = modifiedSlug;
---

<div class="bg-body dark:bg-darkmode-body p-6 rounded-lg shadow-md">
  <h3 class="text-2xl font-semibold mb-1">
    <a href={slugSelector(`/${data.slug}`, lang)}>
      {title}
    </a>
  </h3>
  <div class="flex items-center mb-3">
    <span class="text-gray-400 mr-2">{id}</span>
    <button class="copy-button" data-id={id} title="Copy">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path class="copy-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
        <path class="check-icon hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
      </svg>
    </button>
  </div>
  
  <p class="text-lg text-gray-600 mb-4">{plainify(data.body?.slice(0, Number(summary_length)))}...</p>
  
  <div class="text-sm text-gray-400 flex flex-wrap gap-x-6 gap-y-2 mb-4">
    <span><a href={slugSelector(`/authors/${slugify(author)}`, lang)}>
        <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
        {humanize(author)}
      </a></span>
    <span class="border-l border-gray-200 pl-3">{context} context</span>
    <span class="border-l border-gray-200 pl-3">{input} input tokens</span>
    <span class="border-l border-gray-200 pl-3">{output} output tokens</span>
    <span class="border-l border-gray-200 pl-3"><FaRegFolder className={"mr-2 -mt-1 inline-block"} />
        {
          categories.map((category: string, index: number) => (
            <a href={slugSelector(`/categories/${slugify(category)}`, lang)}>
              {humanize(category)}
              {index !== categories.length - 1 && ","}
            </a>
          ))
        }</span>
  </div>

  <!-- {image && (
    <ImageMod
      class="mb-6 w-full rounded"
      src={image}
      alt={title}
      width={445}
      height={230}
      format="webp"
    />
  )} -->


</div>

<script>
  document.querySelectorAll('.copy-button').forEach(button => {
    button.addEventListener('click', () => {
      const id = button.getAttribute('data-id') ?? '';
      navigator.clipboard.writeText(id).then(() => {
        const copyIcon = button.querySelector('.copy-icon');
        const checkIcon = button.querySelector('.check-icon');

        if (!copyIcon || !checkIcon) return;
        
        copyIcon.classList.add('hidden');
        checkIcon.classList.remove('hidden');
        
        setTimeout(() => {
          copyIcon.classList.remove('hidden');
          checkIcon.classList.add('hidden');
        }, 2000);
      }).catch(err => {
        console.error('复制失败:', err);
      });
    });
  });
</script>
